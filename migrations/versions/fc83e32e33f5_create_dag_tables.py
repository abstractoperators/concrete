"""create dag tables

Revision ID: fc83e32e33f5
Revises: 3bb0633b746d
Create Date: 2024-11-20 13:47:29.927238

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'fc83e32e33f5'
down_revision: Union[str, None] = '3bb0633b746d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'dagproject',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'dagnode',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('project_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column('operator_name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column('task_name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column('default_task_kwargs', sa.JSON(), nullable=True),
        sa.Column('options', sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(['project_name'], ['dagproject.name'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', 'project_name', name='no_duplicate_names_per_project'),
    )
    op.create_table(
        'dagnodetodagnodelink',
        sa.Column('project_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('parent_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('child_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('input_to_child', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ['project_name', 'child_name'], ['dagnode.project_name', 'dagnode.name'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['project_name', 'parent_name'], ['dagnode.project_name', 'dagnode.name'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['project_name'], ['dagproject.name'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('project_name', 'parent_name', 'child_name'),
    )
    op.create_index(
        op.f('ix_dagnodetodagnodelink_project_name'), 'dagnodetodagnodelink', ['project_name'], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dagnodetodagnodelink_project_name'), table_name='dagnodetodagnodelink')
    op.drop_table('dagnodetodagnodelink')
    op.drop_table('dagnode')
    op.drop_table('dagproject')
    # ### end Alembic commands ###
