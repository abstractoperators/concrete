name: Code Formatting

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      # Taken from install-poetry readme
      # https://github.com/marketplace/actions/install-poetry-action#testing
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --only dev

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: flake8
        uses: py-actions/flake8@v2
        with:
          max-line-length: "120"
      - name: black
        uses: psf/black@stable
        with:
          options: "--check --verbose --skip-string-normalization --line-length=120"
          use_pyproject: true  # sync with poetry version
      - name: isort
        uses: isort/isort-action@v1 
      - name: bandit 
        uses: mdegis/bandit-action@v1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          level: high
          confidence: high
          exit_zero: true  # force success. could be noisy, so try this for now
