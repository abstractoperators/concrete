name: Deploy API to Prod
on: workflow_dispatch
jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: prod
        steps:
            - name: Setup Python for poetry
              uses: actions/setup-python@v5
              with:
                python-version: "3.11.9"

            - name: Checkout code
              uses: actions/checkout@v2

            - name: Configure AWS Credentials for ECS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/gha-ecs-full-access
                  aws-region: us-east-1

            - name: Deploy to ECS prod using AwsTool._deploy_service
              env:
                  OPENAI_API_KEY: ${{ secrets.DEMO_OPENAI_API_KEY }}
                  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
                  DB_HOST: ${{secrets.DB_HOST}}
                  HTTP_SESSION_SECRET: ${{ secrets.HTTP_SESSION_SECRET }}
              run: |
                  curl -sSL https://install.python-poetry.org | python3 -
                  poetry --version
                  poetry install
                  touch .env
                  echo OPENAI_TEMPERATURE=0 > .env
                  echo OPENAI_API_KEY=$OPENAI_API_KEY >> .env 
                  echo DB_DRIVER=postgresql+psycopg >> .env
                  echo DB_USERNAME=postgres >> .env
                  echo DB_PASSWORD=$DB_PASSWORD >> .env
                  echo DB_PORT=5432 >> .env
                  echo DB_HOST=$DB_HOST >> .env
                  echo DB_DATABASE=postgres >> .env

                  echo GOOGLE_OAUTH_CLIENT_ID=400682780267-8rn26kuvcsqk0aj60rk9q3bijk1fnjor.apps.googleusercontent.com >> .env
                  echo HTTP_SESSION_DOMAIN=abop.ai >> .env
                  echo HTTP_SESSION_SECRET=$HTTP_SESSION_SECRET >> .env
                  poetry run python -m concrete deploy \
                    --image-uri 008971649127.dkr.ecr.us-east-1.amazonaws.com/api:latest \
                    --container-name api \
                    --container-port 80 \
                    --container-env-file .env \
                    --listener-rule-field host-header \
                    --listener-rule-value api.abop.ai \

# https://github.com/actions/deploy-pages/issues/329 -
# https://github.com/github/docs/issues/32320 - Explains why id-token write is needed
# The id-token: write permission provides a workflow the ability to interact with external services that use OpenID Connect (OIDC).
permissions:
  id-token: write 
  contents: read