name: Run Alembic Migrations on Staging
on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        environment: staging
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Configure AWS credentials for ECR
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/gha-ecr-write-access
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                  mask-password: "true"

            - name: Build the images
              env: 
                POSTGRES_STAGING_PASSWORD: ${{secrets.POSTGRES_STAGING_PASSWORD}}
              run: |
                  make build-alembic
            - name: Push to ECR
              run: |
                  make aws-ecr-push-alembic
    deploy:
        needs: build
        runs-on: ubuntu-latest
        environment: staging
        steps:
            - name: Setup Python for poetry
              uses: actions/setup-python@v5
              with:
                python-version: "3.11.9"

            - name: Checkout code
              uses: actions/checkout@v2

            - name: Configure AWS Credentials for ECS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/gha-ecs-full-access
                  aws-region: us-east-1

            - name: Deploy to ECS staging using AwsTool._deploy_service
              env: 
                POSTGRES_STAGING_PASSWORD: ${{secrets.POSTGRES_STAGING_PASSWORD}}
              run: |
                  curl -sSL https://install.python-poetry.org | python3 -
                  poetry --version
                  poetry install --only main,tooluse
                  touch .env
                  echo DB_DRIVER=postgresql+psycopg >> .env
                  echo DB_USERNAME=postgres >> .env
                  echo DB_PASSWORD=$POSTGRES_STAGING_PASSWORD >> .env
                  echo DB_PORT=5432 >> .env
                  echo DB_HOST=staging-db.c3auqaqcunqy.us-east-1.rds.amazonaws.com >> .env
                  echo DB_DATABASE=postgres >> .env
                  poetry run python -m concrete deploy --task \
                    --image-uri 008971649127.dkr.ecr.us-east-1.amazonaws.com/alembic:latest \
                    --container-name alembic-staging \
                    --container-port 80 \
                    --container-env-file .env \
                    --security-groups sg-01af4e696bd2679c3 \
                    --subnets subnet-0644cadc735c6b557 \
                    
# https://github.com/actions/deploy-pages/issues/329 -
# https://github.com/github/docs/issues/32320 - Explains why id-token write is needed
# The id-token: write permission provides a workflow the ability to interact with external services that use OpenID Connect (OIDC).
permissions:
  id-token: write 
  contents: read