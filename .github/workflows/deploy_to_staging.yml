name: Deploy Webapps to Staging
run-name: Deploy Webapps to Staging
on:
#   workflow_dispatch:
#     inputs:
#       run_job:
#         description: 'Specify which job(s) to run'
#         required: false
#         default: 'all'
    push:
        branches:
            - michael/workflows


jobs:
    setup-venv:
        name: Setup venv for future builds/deployments
        runs-on: ubuntu-24.04
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with: 
                python-version-file: 'pyproject.toml'
        
            - uses: astral-sh/setup-uv@v3
              with:
                version: "0.4.27"

            - run: uv sync --all-extras --dev
            
            - name: Cache venv
              uses: actions/cache@v4
              with:
                path: .venv
                key: venv-${{runner.os}}-${{hashFiles('uv.lock')}}
                restore-keys: venv-${{runner.os}}-
    
    build: 
        name: Build the images
        runs-on: ubuntu-latest
        # needs: setup-venv
        strategy:
            fail-fast: false
            matrix:
                image:
                    - api
                    - main
                    - homepage
        steps:
            - uses: actions/checkout@v4

            - uses: docker/setup-buildx-action@v3
            
            - uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/gha-ecr-write-access
                  aws-region: us-east-1

            - id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                  mask-password: "true" 

            # - uses: actions/setup-python@v5
            #   with:
            #     python-version-file: 'pyproject.toml'

            # - name: Restore venv
            #   uses: actions/cache@v4
            #   with:
            #     path: .venv
            #     key: venv-${{runner.os}}-${{hashFiles('uv.lock')}}
            #     restore-keys: venv-${{runner.os}}-
           
            # - uses: astral-sh/setup-uv@v3
            #   with:
            #     version: "0.4.27"
            #     enable-cache: true
            
            # - run: uv sync --all-extras --dev --locked
            
            - name: Build the images
              run: |
                touch .env 
                make build-app APP=${{ matrix.image }}
                
            - name: Push to ECR
              run: make aws-ecr-push APP=${{ matrix.image }}
            
    
permissions:
  id-token: write 
  contents: read 