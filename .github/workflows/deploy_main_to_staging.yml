name: Deploy webapp-main to staging
on:
    push:
        branches:
            - michael/deploy_main_to_staging

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Configure AWS credentials for ECR
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/gha-ecr-write-access
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                  mask-password: "true"

            - name: Build the images
              run: make build-webapp-main

            - name: Push to ECR
              run: make aws_ecr_push_main
    deploy:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Setup Python for poetry
              uses: actions/setup-python@v5
              with:
                python-version: "3.11.9"

            - name: Checkout code
              uses: actions/checkout@v2

            - name: Configure AWS Credentials for ECS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/gha-ecs-full-access
                  aws-region: us-east-1

            - name: Deploy to ECS staging using DeployToAWS._deploy_images
              env:
                image_uri: '008971649127.dkr.ecr.us-east-1.amazonaws.com/webapp-main:latest'
              run: |
                  curl -sSL https://install.python-poetry.org | python3 -
                  poetry --version
                  poetry install
                  echo "from concrete.tools import DeployToAWS; DeployToAWS._deploy_image(image_uri='${image_uri}', custom_name = 'webapp-main-staging')" | poetry run python3


# https://github.com/actions/deploy-pages/issues/329 -
# https://github.com/github/docs/issues/32320 - Explains why id-token write is needed
# The id-token: write permission provides a workflow the ability to interact with external services that use OpenID Connect (OIDC).
permissions:
  id-token: write 
  contents: read