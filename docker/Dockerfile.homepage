# FROM python:3.11.9-slim-bookworm

# ENV PYTHONDONTWRITEBYTECODE=1
# ENV PYTHONUNBUFFERED=1
# ENV POETRY_VERSION=1.8
# ENV POETRY_HOME=/opt/poetry
# ENV PATH=$POETRY_HOME/bin:$PATH
# ENV OPENAI_TEMPERATURE=0

# ENV POETRY_NO_INTERACTION=1 \
#     POETRY_VIRTUALENVS_IN_PROJECT=1 \
#     POETRY_VIRTUALENVS_CREATE=1 \
#     POETRY_CACHE_DIR=/tmp/poetry_cache

# WORKDIR /app

# RUN apt-get update
# RUN pip install "poetry==$POETRY_VERSION"

# # README.md ./
# COPY pyproject.toml poetry.lock ./
# RUN TOUCH README.md

# RUN poetry config virtualenvs.create false && \
# poetry install --only webapp,main --no-root && rm -rf $POETRY_CACHE_DIR

# COPY concrete ./concrete
# COPY webapp ./webapp

# RUN poetry install --only webapp,main
# RUN chmod +x ./webapp/homepage/scripts/start.sh

# EXPOSE 80
# CMD ["./webapp/homepage/scripts/start.sh"]

FROM python:3.11.10-bookworm AS builder

RUN pip install poetry==1.8

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

WORKDIR /app

COPY pyproject.toml poetry.lock ./
RUN touch README.md

RUN --mount=type=cache,target=$POETRY_CACHE_DIR poetry install --only main,webapp --no-root

# Switch to runtime image
FROM python:3.11.10-slim-bullseye AS runtime

ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH"

WORKDIR /app
COPY --from=builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}

COPY concrete ./concrete
COPY webapp ./webapp

RUN chmod +x ./webapp/homepage/scripts/start.sh

EXPOSE 80
CMD ["./webapp/homepage/scripts/start.sh"]

