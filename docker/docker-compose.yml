services:
  ts-oauth-homepage:
      image: tailscale/tailscale:latest
      container_name: ts-oauth-homepage
      hostname: ts-oauth-homepage
      environment:
        - TS_AUTHKEY=${TS_AUTHKEY}
        - "TS_EXTRA_ARGS=--advertise-tags=tag:container --reset"
      volumes:
        - /dev/net/tun:/dev/net/tun
      cap_add:
        - net_admin
        - sys_module
      restart: unless-stopped
      ports:
        - "8000:80"

  webapp-homepage:
    image: webapp-homepage
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.homepage
    container_name: webapp-homepage
    env_file:
      - path: "../.env"
        required: false
    network_mode: service:ts-oauth-homepage
    platform: linux/arm64

  ts-oauth-demo:
    image: tailscale/tailscale:latest
    container_name: ts-oauth-demo
    hostname: ts-oauth-demo
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - "TS_EXTRA_ARGS=--advertise-tags=tag:container --reset"
    volumes:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
    ports:
      - "8001:80"

  webapp-demo:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.demo
    image: webapp-demo:latest 
    container_name: webapp-demo
    volumes:
      - shared-volume:/shared
    environment:
      - SHARED_VOLUME=/shared
    env_file: 
      - path: "../.env.demo"
        required: false
    network_mode: service:ts-oauth-demo
    platform: linux/arm64

  # TODO: Figure out why I get warning messages about args not being set, even though in the container
  # I can see the environment variables are set correctly
  daemons:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.daemons
      args:
        GH_WEBHOOK_SECRET: ${GH_WEBHOOK_SECRET}
        GH_CLIENT_ID: ${GH_CLIENT_ID}
        GH_PRIVATE_KEY_PATH: ${GH_PRIVATE_KEY_PATH}
        OPENAI_API_KEY: ${OPENAI_API_KEY}
        OPENAI_TEMPERATURE: ${OPENAI_TEMPERATURE}
    container_name: daemons
    image: daemons:latest
    ports:
      - "8000:80"
  
  ts-oauth-docs:
      image: tailscale/tailscale:latest
      container_name: ts-oauth-docs
      hostname: ts-oauth-docs
      environment:
        - TS_AUTHKEY=${TS_AUTHKEY}
        - "TS_EXTRA_ARGS=--advertise-tags=tag:container --reset"
      volumes:
        - /dev/net/tun:/dev/net/tun
      cap_add:
        - net_admin
        - sys_module
      restart: unless-stopped
      ports:
        - "8000:80"
  docs:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.docs
    container_name: docs
    env_file:
      - path: "../.env"
    image: docs
    network_mode: service:ts-oauth-docs
    depends_on: 
      - "ts-oauth-docs"
    platform: linux/arm64 

  dind-builder:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.dind-builder
    image: dind-builder:latest
    container_name: dind-builder
    privileged: true
    volumes:
      - /shared:/shared
    environment:
      - SHARED_VOLUME=/shared
    env_file:
      - path: "../.env.dind-builder"
        required: false
    platform: linux/arm64


volumes:
  shared-volume:
